name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      test_pypi:
        description: 'Publish to Test PyPI instead of PyPI'
        required: false
        default: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine wheel setuptools

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  test-install:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.11"]
        
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

    - name: Test installation from wheel
      run: |
        pip install dist/*.whl
        python -c "import constellation_sdk; print('Import successful')"
        constellation --help

    - name: Test installation from source distribution
      run: |
        pip uninstall -y constellation-sdk
        pip install dist/*.tar.gz
        python -c "import constellation_sdk; print('Import successful')"
        constellation --help

  publish-test-pypi:
    needs: [build, test-install]
    runs-on: ubuntu-latest
    if: github.event.inputs.test_pypi == 'true'
    environment:
      name: test-pypi
      url: https://test.pypi.org/p/constellation-sdk
    permissions:
      id-token: write  # For trusted publishing

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        verbose: true

  publish-pypi:
    needs: [build, test-install]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    environment:
      name: pypi
      url: https://pypi.org/p/constellation-sdk
    permissions:
      id-token: write  # For trusted publishing

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true

  update-version:
    needs: publish-pypi
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Update version for next development cycle
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "Released version: $VERSION"
        
        # Update version in __init__.py
        sed -i "s/__version__ = \".*\"/__version__ = \"$VERSION\"/" constellation_sdk/__init__.py
        
        # Update version in setup.py
        sed -i "s/version=\".*\"/version=\"$VERSION\"/" setup.py
        
        echo "Updated version to $VERSION"

    - name: Create summary
      run: |
        echo "## 🚀 Release Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ Successfully published constellation-sdk v${GITHUB_REF#refs/tags/v} to PyPI" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "📦 Package URL: https://pypi.org/project/constellation-sdk/" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🛠️ Install with: \`pip install constellation-sdk\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "📖 Documentation: https://github.com/constellation-network/python-sdk" >> $GITHUB_STEP_SUMMARY

  notify-release:
    needs: publish-pypi
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - name: Send release notification
      run: |
        echo "🎉 Successfully released constellation-sdk v${GITHUB_REF#refs/tags/v}"
        echo "Package is now available on PyPI: https://pypi.org/project/constellation-sdk/"
        
        # You can add webhook notifications here if needed
        # curl -X POST -H 'Content-type: application/json' \
        #   --data '{"text":"🚀 New release: constellation-sdk v'${GITHUB_REF#refs/tags/v}' is now available on PyPI!"}' \
        #   $SLACK_WEBHOOK_URL 